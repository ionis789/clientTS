import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import TopMenu from "../TopMenu/TopMenu.js";
import MessagesRender from "../MessagesRender/MessagesRender.js";
import BottomMenuContainer from "../BottomMenu/BottomMenuContainer.js";
const Conversation = ({ loggedUserID, selectedRoomData, selectedRoomID, potentialRoom, createRoomTC, selectRoom, isFocus, }) => {
    return (_jsx(_Fragment, { children: selectedRoomID && !potentialRoom.isInitiateConversation ? (_jsxs("div", { className: "h-svh flex flex-col ", children: [_jsx("div", { children: _jsx(TopMenu, { userCompanionInfo: selectedRoomData.userCompanionInfo, selectRoom: selectRoom }) }), selectedRoomData.messages.length !== 0 ? (_jsx(MessagesRender, { messages: selectedRoomData.messages, userCompanionID: selectedRoomData.userCompanionInfo.user_id })) : (_jsx("div", { className: "flex items-center justify-center h-svh", children: _jsx("h1", { className: "font-bold text-3xl", children: "No messages yet" }) })), _jsx("div", { children: _jsx(BottomMenuContainer, {}) })] })) : potentialRoom.isInitiateConversation ? (_jsxs("div", { className: "flex flex-col justify-center items-center h-screen", children: [_jsxs("p", { className: "text-3xl font-semibold", children: ["Start new dialog with ", potentialRoom.userCompanionName, " ?"] }), _jsx("br", {}), _jsx("button", { className: "text-2xl font-medium hover:text-blue-400 transition duration-300 ", onClick: () => createRoomTC(loggedUserID, potentialRoom.userCompanionID), children: "Start" })] })) : isFocus ? (_jsx("div", { className: "text-3xl font-semibold flex justify-center items-center h-screen", children: "Find a user" })) : (_jsx("div", { className: "text-3xl font-semibold flex justify-center items-center h-screen", children: "Select dialog" })) }));
};
export default Conversation;
